{"version":3,"sources":["component/code-editor/CodeEditor.jsx","component/Embed.jsx","layout/playground.jsx","styled/header.jsx","layout/header.jsx","App.js","serviceWorker.js","styled/GlobalColors.jsx","styled/GlobalStyles.jsx","index.js"],"names":["Wrapper","styled","div","CodeEditor","props","value","onChange","id","force","language","ref","useRef","style","options","useState","monaco","createModel","model","editor","setEditor","useEffect","current","create","theme","setModelLanguage","setValue","onDidChangeModelContent","event","getValue","dispose","Embed","args","parse","window","location","href","split","embed","client","axios","baseURL","Playground","useParams","code","setCode","result","setResult","toggle","setToggle","loading","setLoading","shareValue","setShareValue","hello","getDefaultValue","setTimeout","share","initShare","path","get","then","response","data","status","message","catch","e","finally","Grid","columns","marginTop","height","Column","width","as","marginBottom","Button","color","basic","size","onClick","post","stringify","ret","Function","length","res","map","r","datetime","join","SyntaxError","TypeError","origin","url","content","textArea","document","createElement","body","appendChild","focus","select","execCommand","console","log","err","error","removeChild","copyToClipboard","target","Loader","active","inverted","readOnly","StyledHeader","header","StyledHeaderLeft","Header","to","rel","float","Layout","main","App","Fragment","from","exact","component","Boolean","hostname","match","GlobalColors","createGlobalStyle","GlobalStyle","span","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4dc2570a.chunk.js","sourcesContent":["/*\n* @file index.jsx.jsx\n* @author jansora\n* @date 2020/2/12\n*/\n\n\nimport React, {useEffect, useRef, useState} from \"react\";\n\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.main';\n\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CodeEditor = (props) => {\n\n    const {value, onChange, id, force} = props;\n    const language = props.language ? props.language : 'javascript';\n    const ref = useRef(null);\n    const style = props.style ? props.style  : {};\n    const options = props.options ? props.options  : {};\n    const [model, setModel] = useState(monaco.editor.createModel(value, language));\n    const [editor, setEditor] = useState(null);\n\n    useEffect(() => {\n        if(ref.current) {\n\n            setEditor(\n              monaco.editor.create(ref.current, {\n                  model, language, theme: \"vs-dark\", ...options,\n              })\n            )\n\n        }\n    }, [ref, model, language]);\n\n\n    useEffect(() => {\n        if (editor && editor.setModelLanguage) {\n            editor.setModelLanguage(model, language)\n        }\n    }, [editor, language, model])\n\n\n    useEffect(() => {\n\n\n\n        if(editor && force) {\n            model.setValue(value);\n            // model\n\n\n        }\n    }, [value, force, model]);\n\n\n\n\n    useEffect(() => {\n        if(editor) {\n            editor.onDidChangeModelContent((event) => onChange && onChange(model.getValue()))\n        }\n    }, [editor]);\n\n\n    useEffect(()=> {\n        return () => model.dispose()\n    }, [])\n\n    return (\n      <Wrapper id={id ? id : \"monaco\"} ref={ref} style={style} />\n    )\n}\n\nexport default CodeEditor;\n","/*\n* @file Embed.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-07-27 19:44\n*/\nimport React, {useState, useEffect} from 'react';\nimport {parse} from \"qs\";\n\nconst Embed = () => {\n  const args = parse(window.location.href.split('?')[1]);\n  const [embed] =  useState(args.embed ? args.embed === \"true\" : false)\n  return embed\n}\nexport default Embed;\n","/*\n* @file playground.jsx\n* @author jansora\n* @date 2020/2/5\n*/\n\n\nimport React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport {Button, Grid, Header, Loader} from \"semantic-ui-react\";\nimport CodeEditor from \"../component/code-editor/CodeEditor\";\nimport axios from 'axios';\nimport { parse } from 'qs';\n\nimport {stringify} from \"qs\"\nimport Embed from \"../component/Embed\";\nconst client = axios.create(\n  {\n    baseURL: \"/playground/\",\n  }\n);\n\nconst copyToClipboard = (content='拷贝的内容') => {\n  let textArea = document.createElement(\"textarea\");\n  textArea.value = content;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  try {\n    document.execCommand('copy')\n      ? console.log('上传成功, 已拷贝到剪贴板')\n      : console.log('上传失败') ;\n  } catch (err) {\n    console.error('上传成功, 拷贝到剪贴板时执行异常', err);\n  }\n  document.body.removeChild(textArea);\n}\n\nconst getDefaultValue = (language) => {\n\n  const hello = `\"hello, world!\"`;\n  if(language === \"python\") return `print(${hello})`\n  if(language === \"java\") return `import java.util.Collections;\n\npublic class Demo {\n  public static void main(String[] args) {\n    System.out.println(Collections.singletonList(\"hello, world!\"));\n  }\n}\n  \n  `\n  if (language === \"go\") return `package main\n\nimport (\n\\t\"fmt\"\n)\n\nfunc main() {\n\\tfmt.Println(\"Hello, playground\")\n}\n`\n  if(language === \"javascript\") return `console.log(${hello})`\n  if(language === \"node\") return `console.log(${hello})`\n  return \"edit some code here....\";\n}\nconst FormatInitConsole = `\nlet everything = []\nif (console.everything === undefined)\n{\n    console.everything = true;\n\n    console.defaultLog = console.log.bind(console);\n    console.log = function(){\n        everything.push({\"type\":\"console.log\", \"datetime\":Date().toLocaleString().split(\" \")[4], \"value\":Array.from(arguments)});\n        console.defaultLog.apply(console, arguments);\n    }\n    console.defaultError = console.error.bind(console);\n    console.error = function(){\n        everything.push({\"type\":\"console.error\", \"datetime\":Date().toLocaleString().split(\" \")[4], \"value\":Array.from(arguments)});\n        console.defaultError.apply(console, arguments);\n    }\n    console.defaultWarn = console.warn.bind(console);\n    console.warn = function(){\n        everything.push({\"type\":\"console.warn\", \"datetime\":Date().toLocaleString().split(\" \")[4], \"value\":Array.from(arguments)});\n        console.defaultWarn.apply(console, arguments);\n    }\n    console.defaultDebug = console.debug.bind(console);\n    console.debug = function(){\n        everything.push({\"type\":\"console.debug\", \"datetime\":Date().toLocaleString().split(\" \")[4], \"value\":Array.from(arguments)});\n        console.defaultDebug.apply(console, arguments);\n    }\n}`\nconst FormatClearConsole = `\nconsole.everything = undefined\nconsole.log = console.defaultLog\nconsole.error = console.defaultError\nconsole.warn = console.defaultWarn\nconsole.debug = console.defaultDebug\n`\nconst Playground = (props) => {\n\n    const { language } = useParams();\n    const embed = Embed()\n    const [code, setCode] = useState(\"\")\n    const [result, setResult] = useState(\"\")\n    const [toggle, setToggle] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [shareValue, setShareValue] = useState(null)\n\n\n    const [args] =  useState(parse(window.location.href.split('?')[1]))\n\n\n    useEffect(() => {\n      setToggle(true)\n      setCode(getDefaultValue(language))\n      setTimeout(() => setToggle(false), 100)\n    }, [language]);\n\n    useEffect(() => {\n      if(args.language && args.share) {\n        initShare(args)\n      }\n\n    }, [args])\n\n    const initShare = (path) => {\n      client.get(`share?share=${args.share}&language=${args.language}`)\n        .then(response =>  {\n          const { data } = response;\n          if (data.status){\n            setCode(data.data)\n          } else {\n            setCode(data.message)\n          }\n        }).catch( e => {\n        setResult(\"网络错误或服务器异常...\")\n      }).finally(()=> {\n        setLoading(false)\n      })\n    }\n    const share = () => {\n      client.post('share', stringify({code, language}))\n        .then(response =>  {\n          const { data } = response;\n          if (data.status){\n            origin = window.location.origin\n            const url = `${origin}/${language}?share=${data.data}&language=${language}&embed=true`\n            copyToClipboard(url)\n            setShareValue(url)\n          } else {\n          }\n        }).catch( e => {\n        setResult(\"网络错误或服务器异常...\")\n      }).finally(()=> {\n        setLoading(false)\n      })\n    }\n\n    const compiler = () => {\n      setLoading(true)\n      if(language === \"javascript\") {\n        try {\n          // console.log(eval(code))\n          const ret = new Function(`\n          \"use strict\";\n          ${FormatInitConsole}\n          ${code}\n          ${FormatClearConsole}\n          return(everything)\n          `)()\n\n          if(ret && ret.length > 0) {\n\n            const res = ret.map(r => `${r.datetime} ${r.value.join(\"\\n\")}`).join(\"\\n\")\n            return setResult(res)\n          }\n          // setResult(eval(code))\n          // setResult(Function(`\"use strict\";return(${code})`)())\n        } catch (e) {\n          // alert(e)\n          if (e instanceof SyntaxError) {\n            setResult(e.message);\n          }\n          if (e instanceof TypeError) {\n            setResult(e.message);\n          }\n          // setResult(e)\n        } finally\n        {\n          setLoading(false)\n        }\n        return\n      }\n      client.post('compiler', stringify({language, code}))\n        .then(response =>  {\n          const { data } = response;\n          if (data.status){\n            setResult(data.data)\n          } else {\n            setResult(data.message)\n          }\n        }).catch( e => {\n          setResult(\"网络错误或服务器异常...\")\n      }).finally(()=> {\n        setLoading(false)\n      })\n\n    }\n\n    return (\n        <Grid columns=\"equal\" style={{marginTop: embed ? 0 : 30, height: \"100%\"}}>\n          <Grid.Column width={8}>\n            <Header as=\"h3\">编码区</Header>\n            {\n              !toggle &&\n              <CodeEditor\n                force={false}\n                id={\"code-editor-template\"}\n                language={language === \"node\" ? \"javascript\" : language}\n                value={code}\n                onChange={setCode}\n                style={{height: 500}}\n                // options={{readOnly}}\n              />\n            }\n\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header as=\"h3\" style={{marginBottom: 6}}>\n              <Button color=\"violet\" basic size=\"tiny\" onClick={compiler}>运行</Button>\n              <Button color=\"green\" basic size=\"tiny\" onClick={share}>分享</Button>\n              {\n                shareValue &&\n                <Button as=\"a\" color=\"green\" size=\"tiny\" target=\"_blank\"\n                        href={shareValue}\n                >分享成功, 已拷贝到剪贴板,点击在新窗口打开\n                </Button>\n\n              }\n\n            </Header>\n            {\n              <Loader active={loading} inverted content=\"解析中...\"/>\n            }\n            {\n              !toggle &&\n              <CodeEditor\n                force={true}\n                id={\"code-editor-template\"}\n                language={language}\n                value={result}\n                // onChange={setR}\n                style={{height: 500}}\n                options={{readOnly: true}}\n              />\n            }\n\n          </Grid.Column>\n        </Grid>\n\n    )\n}\n\nexport default Playground;\n","/*\r\n* @file header.jsx\r\n* @author jansora\r\n* @date 2020/2/4\r\n*/\r\n\r\n\r\n/*\r\n* @file header.jsx\r\n* @description〈一句话功能简述〉\r\n* @author jansora\r\n* @date 2020-02-04 10:21\r\n*/\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  background: white;\r\n  z-index: 1000;\r\n  height: var(--header-height);\r\n  padding: 0 16px;\r\n  box-shadow: 0 0 8px 0 rgba(0,0,0,.1);\r\n  line-height: var(--header-height);\r\n\r\n`;\r\n\r\nexport const StyledHeaderLeft = styled.div`\r\n  float: left;\r\n\r\n  a{\r\n    color: #363636 !important; \r\n    padding: 0 10px;\r\n  }\r\n\r\n  a.active{\r\n    font-weight: bold;\r\n    color: var(--primary-color) !important;\r\n  }\r\n`;\r\n\r\nexport const StyledHeaderRight = styled.div`\r\n  float: right;\r\n  a {\r\n    line-height: 50px;\r\n  }\r\n  i {\r\n  font-size: 16px !important;\r\n    color: var(--primary-color);\r\n  }\r\n  span.ant-avatar.ant-avatar-circle{\r\n    background: var(--primary-color);\r\n    margin-top: -4px;\r\n    span.ant-avatar-string {\r\n        color: white;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const StyledProductsWrapper = styled.div`\r\n  width: 320px;\r\n  padding: 16px;\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const StyledProductsItem = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    height: 92px;\r\n    width: 92px;\r\n    margin-top: 4px;\r\n    transition: margin-top 218ms ease-in-out;\r\n    a {\r\n    \r\n        display: flex;\r\n        cursor: pointer;\r\n\r\n          height: 50px;\r\n          width: 50px;\r\n          i {\r\n            font-size: 40px;\r\n          } \r\n    }\r\n    span {\r\n        margin-bottom: 10px;\r\n    }\r\n    &:hover {\r\n      margin-top: 0;\r\n    }\r\n    \r\n`;\r\n\r\n\r\n","/*\r\n* @file header.jsx\r\n* @author jansora\r\n* @date 2020/2/4\r\n*/\r\n\r\n\r\nimport React from \"react\";\r\nimport {StyledHeader, StyledHeaderLeft} from \"../styled/header\";\r\n\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"semantic-ui-react\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <StyledHeader>\r\n            <StyledHeaderLeft>\r\n              <NavLink to=\"/java\">Java</NavLink>\r\n              <NavLink to=\"/python\">Python</NavLink>\r\n              <NavLink to=\"/go\">Golang</NavLink>\r\n              <NavLink to=\"/javascript\">Browser Javascript</NavLink>\r\n              <NavLink to=\"/node\">Nodejs</NavLink>\r\n            </StyledHeaderLeft>\r\n          <a target=\"_blank\" rel='noopener noreferrer' href={\"https://github.com/Jansora/OnlineCompiler\"} style={{float: \"right\"}}>Github</a>\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport Playground from \"./layout/playground\";\r\n\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\n\r\nimport Header from \"./layout/header\";\r\nimport styled from \"styled-components\";\r\nimport Embed from \"./component/Embed\";\r\n\r\nconst Layout = styled.main`\r\n  padding-top: ${props => !props.embed ? 'var(--header-height)' : '0px'};\r\n  height: calc(100% - var(--header-height));\r\n  //width: 100%;\r\n  margin: ${props => !props.embed ? '0 50px' : '0px'};;\r\n`;\r\n\r\nconst App = () => {\r\n  const embed = Embed()\r\n  return (\r\n    <React.Fragment>\r\n      {!embed && <Header/>}\r\n        <Layout embed={embed}>\r\n          <Switch>\r\n            <Redirect from=\"/\" to={\"/java\"} exact />\r\n              <Route path=\"/:language\" component={Playground} exact={false}/>\r\n          </Switch>\r\n        </Layout>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/*\r\n* @file GlobalColors.jsx\r\n* @description〈一句话功能简述〉\r\n* @author jansora\r\n* @date 2020-02-04 10:21\r\n*/\r\nimport {createGlobalStyle} from \"styled-components\";\r\n\r\nconst GlobalColors = createGlobalStyle`\r\n\r\n  body{\r\n    --primary-color: #3f51b5;\r\n    --primary-active-color: #5FA95E;\r\n    --header-height: 48px;\r\n  }\r\n\r\n  .red {\r\n    // 整体主题色配置\r\n    --primary-color: #db2828;\r\n    --active-backgroud-color: rgba(219, 40, 40, .08);\r\n    --hover-backgroud-color: rgba(219, 40, 40, .1);\r\n  }\r\n  .orange {\r\n    // 整体主题色配置\r\n    --primary-color: #f2711c;\r\n    --active-backgroud-color: rgba(242, 113, 28, .08);\r\n    --hover-backgroud-color: rgba(242, 113, 28, .1);\r\n  }\r\n  .yellow {\r\n    // 整体主题色配置\r\n    --primary-color: #fbbd08;\r\n    --active-backgroud-color: rgba(251, 189, 8, .08);\r\n    --hover-backgroud-color: rgba(251, 189, 8, .1);\r\n  }\r\n  .olive {\r\n    // 整体主题色配置\r\n    --primary-color: #b5cc18;\r\n    --active-backgroud-color: rgba(181, 204, 24, .08);\r\n    --hover-backgroud-color: rgba(181, 204, 24, .1);\r\n  }\r\n  .green {\r\n    // 整体主题色配置\r\n    --primary-color: #21ba45;\r\n    --active-backgroud-color: rgba(33, 186, 69, .08);\r\n    --hover-backgroud-color: rgba(33, 186, 69, .1);\r\n  }\r\n  .teal {\r\n    // 整体主题色配置\r\n    --primary-color: #00b5ad;\r\n    --active-backgroud-color: rgba(0, 181, 173, .08);\r\n    --hover-backgroud-color: rgba(0, 181, 173, .1);\r\n  }\r\n  .blue {\r\n    // 整体主题色配置\r\n    --primary-color: #2185d0;\r\n    --active-backgroud-color: rgba(33, 133, 208, .08);\r\n    --hover-backgroud-color: rgba(33, 133, 208, .1);\r\n  }\r\n  \r\n  .violet {\r\n    // 整体主题色配置\r\n    --primary-color: #6435c9;\r\n    --active-backgroud-color: rgba(100, 53, 201, .08);\r\n    --hover-backgroud-color: rgba(100, 53, 201, .1);\r\n  }\r\n  .purple {\r\n    // 整体主题色配置\r\n    --primary-color: #a333c8;\r\n    --active-backgroud-color: rgba(163, 51, 200, .08);\r\n    --hover-backgroud-color: rgba(163, 51, 200, .1);\r\n  }\r\n  .pink {\r\n    // 整体主题色配置\r\n    --primary-color: #e03997;\r\n    --active-backgroud-color: rgba(224, 57, 151, .08);\r\n    --hover-backgroud-color: rgba(224, 57, 151, .1);\r\n  }\r\n  .brown {\r\n    // 整体主题色配置\r\n    --primary-color: #a5673f;\r\n    --active-backgroud-color: rgba(165, 103, 63, .08);\r\n    --hover-backgroud-color: rgba(165, 103, 63, .1);\r\n  }\r\n  .grey {\r\n    // 整体主题色配置\r\n    --primary-color: #767676;\r\n    --active-backgroud-color: rgba(118, 118, 118, .08);\r\n    --hover-backgroud-color:rgba(118, 118, 118, .1);\r\n  }\r\n\r\n`;\r\nexport default GlobalColors;\r\n","/*\r\n* @file GlobalStyles.jsx\r\n* @description〈一句话功能简述〉\r\n* @author jansora\r\n* @date 2020-02-04 10:21\r\n*/\r\nimport styled , {createGlobalStyle} from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body{\r\n     \r\n      height: 100vh;\r\n      width: 100vw;\r\n      margin: 0;\r\n      overflow: auto;\r\n      overflow-x: hidden;\r\n      //width: 100%;\r\n      // overflow: hidden;\r\n      scroll-behavior: smooth;\r\n      color: #595959;\r\n      font-family: Chinese Quote,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif;\r\n      a{\r\n        //color: var(--primary-color);\r\n        color: rgba(0,0,0, 0.87);\r\n        text-decoration: none !important;\r\n      }\r\n      a:hover, a:checked, a:active{\r\n          color: var(--primary-color);\r\n\r\n        //color: var(--primary-active-color);\r\n      }\r\n      ::selection {\r\n        background-color: var(--primary-color);\r\n        color: white;\r\n      }\r\n      //p, span, a {\r\n      //  color: #383838;\r\n      //}\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n      width: 6px;\r\n      height: 5px;\r\n      border: 3px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      width:6px;\r\n      background-color: var(--primary-color) !important;\r\n      -webkit-border-radius: 2px;\r\n      outline: 1px solid  var(--primary-color);\r\n      outline-offset: -2px;\r\n      border: 3px solid  var(--primary-color);\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      display: none;\r\n    }\r\n\r\n    body::-webkit-scrollbar {\r\n        //display: none;\r\n\r\n    }\r\n    \r\n    #root {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n    .active {\r\n      color: var(--primary-color) !important;\r\n    }\r\n\r\n`;\r\n\r\nexport const PrimarySpan = styled.span`\r\n   color: var(--primary-color);\r\n`\r\n\r\nexport const StyledDescription = styled.span`\r\n  color: grey;\r\n  font-size: .75rem;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  margin: 4px 16px 12px;\r\n  opacity: .9;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\n\r\n\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\n\n\nimport GlobalColors from \"./styled/GlobalColors\";\nimport GlobalStyle from \"./styled/GlobalStyles\";\n\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <GlobalStyle/><GlobalColors/>\n        <App/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nserviceWorker.unregister();\n"],"sourceRoot":""}