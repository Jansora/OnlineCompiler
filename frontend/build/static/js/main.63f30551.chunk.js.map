{"version":3,"sources":["component/code-editor/CodeEditor.jsx","component/Embed.jsx","layout/renderSqlResult.jsx","layout/playground.jsx","styled/header.jsx","layout/header.jsx","App.js","serviceWorker.js","styled/GlobalColors.jsx","styled/GlobalStyles.jsx","index.js"],"names":["Wrapper","styled","div","CodeEditor","props","value","onChange","id","force","language","ref","useRef","style","options","useState","monaco","createModel","model","editor","setEditor","useEffect","current","create","theme","setModelLanguage","setValue","onDidChangeModelContent","event","getValue","dispose","Embed","args","parse","window","location","href","split","embed","RenderSqlResult","result","Array","panes","map","index","columns","values","menuItem","render","Table","celled","striped","compact","Header","Row","column","HeaderCell","Body","v","Cell","Fragment","Tab","menu","secondary","pointing","client","axios","baseURL","Playground","useParams","db","setDb","code","setCode","setResult","toggle","setToggle","loading","setLoading","shareValue","setShareValue","hello","getDefaultValue","setTimeout","share","initShare","initSqlJs","locateFile","file","then","SQL","Database","catch","err","console","error","path","get","response","data","status","errorDesc","e","finally","post","origin","url","content","textArea","document","createElement","body","appendChild","focus","select","execCommand","log","removeChild","copyToClipboard","compiler","exec","ret","Function","length","res","r","datetime","join","SyntaxError","message","TypeError","Grid","marginTop","height","as","margin","size","Button","color","basic","onClick","marginLeft","target","Loader","active","inverted","whiteSpace","Column","width","marginBottom","readOnly","StyledHeader","header","StyledHeaderLeft","to","rel","float","Layout","main","App","from","exact","component","Boolean","hostname","match","GlobalColors","createGlobalStyle","GlobalStyle","span","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63f30551.chunk.js","sourcesContent":["/*\n* @file index.jsx.jsx\n* @author jansora\n* @date 2020/2/12\n*/\n\n\nimport React, {useEffect, useRef, useState} from \"react\";\n\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.main';\n\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CodeEditor = (props) => {\n\n    const {value, onChange, id, force} = props;\n    const language = props.language ? props.language : 'javascript';\n    const ref = useRef(null);\n    const style = props.style ? props.style  : {};\n    const options = props.options ? props.options  : {};\n    const [model, setModel] = useState(monaco.editor.createModel(value, language));\n    const [editor, setEditor] = useState(null);\n\n    useEffect(() => {\n        if(ref.current) {\n\n            setEditor(\n              monaco.editor.create(ref.current, {\n                  model, language, theme: \"vs-dark\", ...options,\n              })\n            )\n\n        }\n    }, [ref, model, language]);\n\n\n    useEffect(() => {\n        if (editor && editor.setModelLanguage) {\n            editor.setModelLanguage(model, language)\n        }\n    }, [editor, language, model])\n\n\n    useEffect(() => {\n\n\n\n        if(editor && force) {\n            model.setValue(value);\n            // model\n\n\n        }\n    }, [value, force, model]);\n\n\n\n\n    useEffect(() => {\n        if(editor) {\n            editor.onDidChangeModelContent((event) => onChange && onChange(model.getValue()))\n        }\n    }, [editor]);\n\n\n    useEffect(()=> {\n        return () => model.dispose()\n    }, [])\n\n    return (\n      <Wrapper id={id ? id : \"monaco\"} ref={ref} style={style} />\n    )\n}\n\nexport default CodeEditor;\n","/*\n* @file Embed.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-07-27 19:44\n*/\nimport React, {useState, useEffect} from 'react';\nimport {parse} from \"qs\";\n\nconst Embed = () => {\n  const args = parse(window.location.href.split('?')[1]);\n  const [embed] =  useState(args.embed ? args.embed === \"true\" : false)\n  return embed\n}\nexport default Embed;\n","import React from \"react\";\nimport {Tab, Table} from \"semantic-ui-react\";\n\nconst RenderSqlResult = (result) => {\n\n  if (!(result instanceof Array)) return ''\n\n  const panes = result.map(({columns, values}, index) => {\n    return {\n      menuItem: `SELECT Result ${index}`,\n      render: () => <>\n        <Table celled striped  compact='very'>\n          <Table.Header>\n            <Table.Row>\n              {\n                columns.map(column => <Table.HeaderCell>{column}</Table.HeaderCell>)\n              }\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {\n              values.map(value => <Table.Row>\n                {\n                  value.map( v => <Table.Cell>{v}</Table.Cell>\n                  )\n                }\n              </Table.Row>)\n            }\n          </Table.Body>\n        </Table>\n      </>,\n    }\n  });\n\n\n  return (\n    <React.Fragment>\n      <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n    </React.Fragment>\n  )\n}\n\nexport default RenderSqlResult;\n","/*\n* @file playground.jsx\n* @author jansora\n* @date 2020/2/5\n*/\n\n\nimport React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport {Button, Grid, Header, Loader} from \"semantic-ui-react\";\nimport CodeEditor from \"../component/code-editor/CodeEditor\";\nimport axios from 'axios';\nimport {parse} from 'qs';\nimport Embed from \"../component/Embed\";\n\nimport initSqlJs from \"sql.js\";\nimport RenderSqlResult from \"./renderSqlResult\";\n\n\nconst client = axios.create(\n  {\n    baseURL: \"/api/playground/\",\n  }\n);\n\nconst copyToClipboard = (content='拷贝的内容') => {\n  let textArea = document.createElement(\"textarea\");\n  textArea.value = content;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  try {\n    document.execCommand('copy')\n      ? console.log('上传成功, 已拷贝到剪贴板')\n      : console.log('上传失败') ;\n  } catch (err) {\n    console.error('上传成功, 拷贝到剪贴板时执行异常', err);\n  }\n  document.body.removeChild(textArea);\n}\n\nconst getDefaultValue = (language) => {\n\n  const hello = `\"hello, world!\"`;\n  if(language === \"python\") return `print(${hello})`\n  if(language === \"java\") return `import java.util.Collections;\n\npublic class Clazz {\n  public static void main(String[] args) {\n    System.out.println(Collections.singletonList(\"hello, world!\"));\n  }\n}\n  \n  `\n  if (language === \"go\") return `package main\n\nimport (\n\\t\"fmt\"\n)\n\nfunc main() {\n\\tfmt.Println(\"Hello, playground\")\n}\n`\n  if(language === \"javascript\") return `console.log(${hello})`\n  if(language === \"node\") return `console.log(${hello})`\n  if(language === \"sql\") return `DROP TABLE IF EXISTS employees;\nCREATE TABLE employees( id          integer,  name    text,\n                          designation text,     manager integer,\n                          hired_on    date,     salary  integer,\n                          commission  float,    dept    integer);\n\nINSERT INTO employees VALUES (1,'JOHNSON','ADMIN',6,'1990-12-17',18000,NULL,4);\nINSERT INTO employees VALUES (2,'HARDING','MANAGER',9,'1998-02-02',52000,300,3);\nINSERT INTO employees VALUES (3,'TAFT','SALES I',2,'1996-01-02',25000,500,3);\nINSERT INTO employees VALUES (4,'HOOVER','SALES I',2,'1990-04-02',27000,NULL,3);\nINSERT INTO employees VALUES (5,'LINCOLN','TECH',6,'1994-06-23',22500,1400,4);\nINSERT INTO employees VALUES (6,'GARFIELD','MANAGER',9,'1993-05-01',54000,NULL,4);\nINSERT INTO employees VALUES (7,'POLK','TECH',6,'1997-09-22',25000,NULL,4);\nINSERT INTO employees VALUES (8,'GRANT','ENGINEER',10,'1997-03-30',32000,NULL,2);\nINSERT INTO employees VALUES (9,'JACKSON','CEO',NULL,'1990-01-01',75000,NULL,4);\nINSERT INTO employees VALUES (10,'FILLMORE','MANAGER',9,'1994-08-09',56000,NULL,2);\nINSERT INTO employees VALUES (11,'ADAMS','ENGINEER',10,'1996-03-15',34000,NULL,2);\nINSERT INTO employees VALUES (12,'WASHINGTON','ADMIN',6,'1998-04-16',18000,NULL,4);\nINSERT INTO employees VALUES (13,'MONROE','ENGINEER',10,'2000-12-03',30000,NULL,2);\nINSERT INTO employees VALUES (14,'ROOSEVELT','CPA',9,'1995-10-12',35000,NULL,1);\n\nSELECT designation,COUNT(*) AS nbr, (AVG(salary)) AS avg_salary FROM employees GROUP BY designation ORDER BY avg_salary DESC;\nSELECT name,hired_on FROM employees ORDER BY hired_on;\n  \n  `\n\n  return \"edit some code here....\";\n}\nconst FormatInitConsole = `\nlet everything = []\nif (console.everything === undefined)\n{\n    console.everything = true;\n\n    console.defaultLog = console.log.bind(console);\n    console.log = function(){\n        everything.push({\"type\":\"console.log\", \"datetime\":Date().toLocaleString().split(\" \")[4], \"value\":Array.from(arguments)});\n        console.defaultLog.apply(console, arguments);\n    }\n    console.defaultError = console.error.bind(console);\n    console.error = function(){\n        everything.push({\"type\":\"console.error\", \"datetime\":Date().toLocaleString().split(\" \")[4], \"value\":Array.from(arguments)});\n        console.defaultError.apply(console, arguments);\n    }\n    console.defaultWarn = console.warn.bind(console);\n    console.warn = function(){\n        everything.push({\"type\":\"console.warn\", \"datetime\":Date().toLocaleString().split(\" \")[4], \"value\":Array.from(arguments)});\n        console.defaultWarn.apply(console, arguments);\n    }\n    console.defaultDebug = console.debug.bind(console);\n    console.debug = function(){\n        everything.push({\"type\":\"console.debug\", \"datetime\":Date().toLocaleString().split(\" \")[4], \"value\":Array.from(arguments)});\n        console.defaultDebug.apply(console, arguments);\n    }\n}`\nconst FormatClearConsole = `\nconsole.everything = undefined\nconsole.log = console.defaultLog\nconsole.error = console.defaultError\nconsole.warn = console.defaultWarn\nconsole.debug = console.defaultDebug\n`\nconst Playground = (props) => {\n\n    const { language } = useParams();\n    const embed = Embed()\n    const [db, setDb] = useState(null)\n    const [code, setCode] = useState(\"\")\n    const [result, setResult] = useState(\"\")\n    const [toggle, setToggle] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [shareValue, setShareValue] = useState(null)\n\n\n    const [args] =  useState(parse(window.location.href.split('?')[1]))\n\n\n    useEffect(() => {\n      setToggle(true)\n      setCode(getDefaultValue(language))\n      setTimeout(() => setToggle(false), 100)\n    }, [language]);\n\n    useEffect(() => {\n      if(args.language && args.share) {\n        initShare(args)\n      }\n\n    }, [args])\n\n    useEffect(() => {\n      if(language === \"sql\" && db == null) {\n        initSqlJs(\n          {\n            locateFile: file => `https://cdn.jansora.com/lib/sql.js/dist/1.6.1/${file}`\n          }\n        )\n          .then(SQL => setDb(new SQL.Database()))\n          .catch(err => console.error(err));\n      }\n    }, [language, db])\n\n    const initShare = (path) => {\n      client.get(`share?share=${args.share}&language=${args.language}`)\n        .then(response =>  {\n          const { data } = response;\n          if (data.status){\n            setCode(data.data)\n          } else {\n            setCode(data.errorDesc)\n          }\n        }).catch( e => {\n        setResult(\"网络错误或服务器异常...\")\n      }).finally(()=> {\n        setLoading(false)\n      })\n    }\n    const share = () => {\n      client.post('share', {code, language})\n        .then(response =>  {\n          const { data } = response;\n          if (data.status){\n            origin = window.location.origin\n            const url = `${origin}/${language}?share=${data.data}&language=${language}&embed=true`\n            copyToClipboard(url)\n            setShareValue(url)\n          } else {\n          }\n        }).catch( e => {\n        setResult(\"网络错误或服务器异常...\")\n      }).finally(()=> {\n        setLoading(false)\n      })\n    }\n\n    const compiler = () => {\n      setLoading(true)\n      if(language === \"sql\") {\n        if(db) {\n          setResult(db.exec(code))\n        }\n        setLoading(false)\n        return ;\n      }\n      if(language === \"javascript\") {\n        try {\n          // console.log(eval(code))\n          const ret = new Function(`\n          \"use strict\";\n          ${FormatInitConsole}\n          ${code}\n          ${FormatClearConsole}\n          return(everything)\n          `)()\n\n          if(ret && ret.length > 0) {\n\n            const res = ret.map(r => `${r.datetime} ${r.value.join(\"\\n\")}`).join(\"\\n\")\n            return setResult(res)\n          }\n          // setResult(eval(code))\n          // setResult(Function(`\"use strict\";return(${code})`)())\n        } catch (e) {\n          // alert(e)\n          if (e instanceof SyntaxError) {\n            setResult(e.message);\n          }\n          if (e instanceof TypeError) {\n            setResult(e.message);\n          }\n          // setResult(e)\n        } finally\n        {\n          setLoading(false)\n        }\n        return\n      }\n      client.post('compiler', {language, code})\n        .then(response =>  {\n          const { data } = response;\n          if (data.status){\n            setResult(data.data)\n          } else {\n            setResult(data.errorDesc)\n          }\n        }).catch( e => {\n          setResult(\"网络错误或服务器异常...\")\n      }).finally(()=> {\n        setLoading(false)\n      })\n\n    }\n    if (embed) {\n      return (\n        <Grid columns=\"equal\" style={{marginTop: 0}}>\n            {\n              !toggle &&\n              <CodeEditor\n                force={false}\n                id={\"code-editor-template\"}\n                language={language === \"node\" ? \"javascript\" : language}\n                value={code}\n                onChange={setCode}\n                style={{height: 400}}\n                // options={{readOnly}}\n              />\n            }\n\n          {\n\n            <Header as=\"h3\" style={{margin: \"5px 0\"}} size=\"tiny\">\n              <Button color=\"violet\" basic size=\"tiny\" onClick={compiler} style={{marginLeft: 10}}>运行</Button>\n              <Button color=\"green\" basic size=\"tiny\" onClick={share}>分享</Button>\n              {\n                shareValue &&\n                <Button as=\"a\" color=\"green\" size=\"tiny\" target=\"_blank\"\n                        href={shareValue}\n                >分享成功, 已拷贝到剪贴板,点击在新窗口打开\n                </Button>\n              }\n\n              <Loader active={loading} inverted content=\"解析中...\"/>\n\n              <div style={{margin: '8px 3px', whiteSpace: \"pre-wrap\"}}>\n                输出:\n                {\n                  language === \"sql\" ? RenderSqlResult(result) : result\n                }\n              </div>\n            </Header>\n          }\n\n        </Grid>\n      )\n    }\n\n    return (\n        <Grid columns=\"equal\" style={{marginTop: 30, height: \"100%\"}}>\n          <Grid.Column width={8}>\n            <Header as=\"h3\">编码区</Header>\n            {\n              !toggle &&\n              <CodeEditor\n                force={false}\n                id={\"code-editor-template\"}\n                language={language === \"node\" ? \"javascript\" : language}\n                value={code}\n                onChange={setCode}\n                style={{height: 500}}\n                // options={{readOnly}}\n              />\n            }\n\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header as=\"h3\" style={{marginBottom: 6}}>\n              <Button color=\"violet\" basic size=\"tiny\" onClick={compiler}>运行</Button>\n              <Button color=\"green\" basic size=\"tiny\" onClick={share}>分享</Button>\n              {\n                shareValue &&\n                <Button as=\"a\" color=\"green\" size=\"tiny\" target=\"_blank\"\n                        href={shareValue}\n                >分享成功, 已拷贝到剪贴板,点击在新窗口打开\n                </Button>\n\n              }\n\n            </Header>\n            {\n              language !== \"sql\" && <Loader active={loading} inverted content=\"解析中...\"/>\n            }\n            {\n              !toggle && language !== \"sql\" &&\n              <CodeEditor\n                force={true}\n                id={\"code-editor-template\"}\n                language={language}\n                value={result}\n                // onChange={setR}\n                style={{height: 500}}\n                options={{readOnly: true}}\n              />\n            }\n            {\n              language === \"sql\" && RenderSqlResult(result)\n            }\n          </Grid.Column>\n        </Grid>\n\n    )\n}\n\nexport default Playground;\n","/*\n* @file header.jsx\n* @author jansora\n* @date 2020/2/4\n*/\n\n\n/*\n* @file header.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-02-04 10:21\n*/\n\nimport styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  background: white;\n  z-index: 1000;\n  height: var(--header-height);\n  padding: 0 16px;\n  box-shadow: 0 0 8px 0 rgba(0,0,0,.1);\n  line-height: var(--header-height);\n\n`;\n\nexport const StyledHeaderLeft = styled.div`\n  float: left;\n\n  a{\n    color: #363636 !important; \n    padding: 0 10px;\n  }\n\n  a.active{\n    font-weight: bold;\n    color: var(--primary-color) !important;\n  }\n`;\n\nexport const StyledHeaderRight = styled.div`\n  float: right;\n  a {\n    line-height: 50px;\n  }\n  i {\n  font-size: 16px !important;\n    color: var(--primary-color);\n  }\n  span.ant-avatar.ant-avatar-circle{\n    background: var(--primary-color);\n    margin-top: -4px;\n    span.ant-avatar-string {\n        color: white;\n    }\n  }\n`;\n\n\nexport const StyledProductsWrapper = styled.div`\n  width: 320px;\n  padding: 16px;\n  \n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const StyledProductsItem = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n\n    height: 92px;\n    width: 92px;\n    margin-top: 4px;\n    transition: margin-top 218ms ease-in-out;\n    a {\n    \n        display: flex;\n        cursor: pointer;\n\n          height: 50px;\n          width: 50px;\n          i {\n            font-size: 40px;\n          } \n    }\n    span {\n        margin-bottom: 10px;\n    }\n    &:hover {\n      margin-top: 0;\n    }\n    \n`;\n\n\n","/*\n* @file header.jsx\n* @author jansora\n* @date 2020/2/4\n*/\n\n\nimport React from \"react\";\nimport {StyledHeader, StyledHeaderLeft} from \"../styled/header\";\n\n\nimport {NavLink} from \"react-router-dom\";\nimport {Button} from \"semantic-ui-react\";\n\nconst Header = (props) => {\n\n    return (\n        <StyledHeader>\n            <StyledHeaderLeft>\n              <NavLink to=\"/java\">Java</NavLink>\n              <NavLink to=\"/python\">Python</NavLink>\n              <NavLink to=\"/go\">Golang</NavLink>\n              <NavLink to=\"/javascript\">Browser Javascript</NavLink>\n              <NavLink to=\"/node\">Nodejs</NavLink>\n              <NavLink to=\"/sql\">SQL(SQLite)</NavLink>\n\n            </StyledHeaderLeft>\n          <a target=\"_blank\" rel='noopener noreferrer' href={\"https://github.com/Jansora/OnlineCompiler\"} style={{float: \"right\"}}>Github</a>\n        </StyledHeader>\n    )\n}\n\nexport default Header;\n","import React from 'react';\n\nimport Playground from \"./layout/playground\";\n\nimport {Route, Switch, Redirect} from 'react-router-dom'\n\nimport Header from \"./layout/header\";\nimport styled from \"styled-components\";\nimport Embed from \"./component/Embed\";\n\nconst Layout = styled.main`\n  padding-top: ${props => !props.embed ? 'var(--header-height)' : '0px'};\n  height: calc(100% - var(--header-height));\n  //width: 100%;\n  margin: ${props => !props.embed ? '0 50px' : '0px'};;\n`;\n\nconst App = () => {\n  const embed = Embed()\n  return (\n    <React.Fragment>\n      {!embed && <Header/>}\n        <Layout embed={embed}>\n          <Switch>\n            <Redirect from=\"/\" to={\"/java\"} exact />\n              <Route path=\"/:language\" component={Playground} exact={false}/>\n          </Switch>\n        </Layout>\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n* @file GlobalColors.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-02-04 10:21\n*/\nimport {createGlobalStyle} from \"styled-components\";\n\nconst GlobalColors = createGlobalStyle`\n\n  body{\n    --primary-color: #3f51b5;\n    --primary-active-color: #5FA95E;\n    --header-height: 48px;\n  }\n\n  .red {\n    // 整体主题色配置\n    --primary-color: #db2828;\n    --active-backgroud-color: rgba(219, 40, 40, .08);\n    --hover-backgroud-color: rgba(219, 40, 40, .1);\n  }\n  .orange {\n    // 整体主题色配置\n    --primary-color: #f2711c;\n    --active-backgroud-color: rgba(242, 113, 28, .08);\n    --hover-backgroud-color: rgba(242, 113, 28, .1);\n  }\n  .yellow {\n    // 整体主题色配置\n    --primary-color: #fbbd08;\n    --active-backgroud-color: rgba(251, 189, 8, .08);\n    --hover-backgroud-color: rgba(251, 189, 8, .1);\n  }\n  .olive {\n    // 整体主题色配置\n    --primary-color: #b5cc18;\n    --active-backgroud-color: rgba(181, 204, 24, .08);\n    --hover-backgroud-color: rgba(181, 204, 24, .1);\n  }\n  .green {\n    // 整体主题色配置\n    --primary-color: #21ba45;\n    --active-backgroud-color: rgba(33, 186, 69, .08);\n    --hover-backgroud-color: rgba(33, 186, 69, .1);\n  }\n  .teal {\n    // 整体主题色配置\n    --primary-color: #00b5ad;\n    --active-backgroud-color: rgba(0, 181, 173, .08);\n    --hover-backgroud-color: rgba(0, 181, 173, .1);\n  }\n  .blue {\n    // 整体主题色配置\n    --primary-color: #2185d0;\n    --active-backgroud-color: rgba(33, 133, 208, .08);\n    --hover-backgroud-color: rgba(33, 133, 208, .1);\n  }\n  \n  .violet {\n    // 整体主题色配置\n    --primary-color: #6435c9;\n    --active-backgroud-color: rgba(100, 53, 201, .08);\n    --hover-backgroud-color: rgba(100, 53, 201, .1);\n  }\n  .purple {\n    // 整体主题色配置\n    --primary-color: #a333c8;\n    --active-backgroud-color: rgba(163, 51, 200, .08);\n    --hover-backgroud-color: rgba(163, 51, 200, .1);\n  }\n  .pink {\n    // 整体主题色配置\n    --primary-color: #e03997;\n    --active-backgroud-color: rgba(224, 57, 151, .08);\n    --hover-backgroud-color: rgba(224, 57, 151, .1);\n  }\n  .brown {\n    // 整体主题色配置\n    --primary-color: #a5673f;\n    --active-backgroud-color: rgba(165, 103, 63, .08);\n    --hover-backgroud-color: rgba(165, 103, 63, .1);\n  }\n  .grey {\n    // 整体主题色配置\n    --primary-color: #767676;\n    --active-backgroud-color: rgba(118, 118, 118, .08);\n    --hover-backgroud-color:rgba(118, 118, 118, .1);\n  }\n\n`;\nexport default GlobalColors;\n","/*\n* @file GlobalStyles.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-02-04 10:21\n*/\nimport styled , {createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n     \n      height: 100vh;\n      width: 100vw;\n      margin: 0;\n      overflow: auto;\n      overflow-x: hidden;\n      //width: 100%;\n      // overflow: hidden;\n      scroll-behavior: smooth;\n      color: #595959;\n      font-family: Chinese Quote,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif;\n      a{\n        //color: var(--primary-color);\n        color: rgba(0,0,0, 0.87);\n        text-decoration: none !important;\n      }\n      a:hover, a:checked, a:active{\n          color: var(--primary-color);\n\n        //color: var(--primary-active-color);\n      }\n      ::selection {\n        background-color: var(--primary-color);\n        color: white;\n      }\n      //p, span, a {\n      //  color: #383838;\n      //}\n    }\n\n    ::-webkit-scrollbar {\n      width: 6px;\n      height: 5px;\n      border: 3px;\n    }\n    ::-webkit-scrollbar-thumb {\n      width:6px;\n      background-color: var(--primary-color) !important;\n      -webkit-border-radius: 2px;\n      outline: 1px solid  var(--primary-color);\n      outline-offset: -2px;\n      border: 3px solid  var(--primary-color);\n    }\n    ::-webkit-scrollbar-track {\n      display: none;\n    }\n\n    body::-webkit-scrollbar {\n        //display: none;\n\n    }\n    \n    #root {\n      height: 100%;\n      width: 100%;\n    }\n    .active {\n      color: var(--primary-color) !important;\n    }\n\n`;\n\nexport const PrimarySpan = styled.span`\n   color: var(--primary-color);\n`\n\nexport const StyledDescription = styled.span`\n  color: grey;\n  font-size: .75rem;\n  height: 20px;\n  line-height: 20px;\n  margin: 4px 16px 12px;\n  opacity: .9;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\n\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {HashRouter} from 'react-router-dom';\n\n\nimport GlobalColors from \"./styled/GlobalColors\";\nimport GlobalStyle from \"./styled/GlobalStyles\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <GlobalStyle/><GlobalColors/>\n        <App/>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nserviceWorker.unregister();\n"],"sourceRoot":""}